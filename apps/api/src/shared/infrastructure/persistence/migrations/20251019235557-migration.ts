import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration20251019235557 implements MigrationInterface {
    name = 'Migration20251019235557'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "USER_PROFILES" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "cotept_user_id" varchar2(36) NOT NULL,
                        "nickname" varchar2(50) NOT NULL,
                        "full_name" varchar2(100),
                        "introduce" varchar2(280),
                        "profile_image_url" varchar2(1000),
                        "user_id" number,
                        CONSTRAINT "REL_48ee21ddee7e59b310669f6b71" UNIQUE ("user_id"),
                        CONSTRAINT "PK_964b0edfc4119358847a2cda707" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "BAEKJOON_PROFILE" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "cotept_user_id" varchar2(36) NOT NULL,
                        "baekjoon_id" varchar2(50) NOT NULL,
                        "current_tier" varchar2(20),
                        "highest_tier" varchar2(20),
                        "verification_status" varchar2(20) DEFAULT ''PENDING'' NOT NULL,
                        "is_mentor_eligible" number(1) DEFAULT 0 NOT NULL,
                        "last_synced_at" timestamp,
                        "user_id" number,
                        CONSTRAINT "UQ_c6a833c48aa350647c8aaba40ad" UNIQUE ("baekjoon_id"),
                        CONSTRAINT "REL_f800260427bc88347516226bbd" UNIQUE ("user_id"),
                        CONSTRAINT "PK_aa7eb8860b7a298312d048ae786" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "USERS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "userId" varchar2(36) NOT NULL,
                        "email" varchar2(100) NOT NULL,
                        "password_hash" varchar2(255) NOT NULL,
                        "salt" varchar2(100) NOT NULL,
                        "role" varchar2(20) DEFAULT ''MENTEE'' NOT NULL,
                        "status" varchar2(20) DEFAULT ''ACTIVE'' NOT NULL,
                        "phone_number" varchar2(20),
                        "phone_verified" number DEFAULT 0 NOT NULL,
                        "ci_hash" varchar2(255),
                        "di_hash" varchar2(255),
                        "name" varchar2(100),
                        "birth_date" varchar2(10),
                        "gender" varchar2(1),
                        "last_login_at" timestamp,
                        "deleted_at" timestamp,
                        CONSTRAINT "UQ_20e6bc36f8dd794f59be7037fec" UNIQUE ("userId"),
                        CONSTRAINT "UQ_a1689164dbbcca860ce6d17b2e1" UNIQUE ("email"),
                        CONSTRAINT "PK_ab1bdf2195f15d4175073baf559" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "AUTH_VERIFICATIONS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "user_idx" number,
                        "auth_type" varchar2(20) NOT NULL,
                        "target" varchar2(100) NOT NULL,
                        "verification_code" varchar2(6) NOT NULL,
                        "expires_at" timestamp NOT NULL,
                        "verified" number DEFAULT 0 NOT NULL,
                        "verified_at" timestamp,
                        "attempt_count" number DEFAULT 0 NOT NULL,
                        "ip_address" varchar2(50),
                        CONSTRAINT "PK_dfe5f81efab11b44bf6393f07fa" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "PHONE_VERIFICATIONS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "user_id" number,
                        "provider_id" number NOT NULL,
                        "request_id" varchar2(255) NOT NULL,
                        "phone_number" varchar2(20),
                        "name" varchar2(100),
                        "birth_date" varchar2(10),
                        "gender" varchar2(1),
                        "ci" varchar2(255),
                        "di" varchar2(255),
                        "auth_result" varchar2(50),
                        "response_data" clob,
                        "status" varchar2(20) DEFAULT ''PENDING'' NOT NULL,
                        "verified_at" timestamp,
                        CONSTRAINT "UQ_368a8b744a2fee46bbcfc298950" UNIQUE ("request_id"),
                        CONSTRAINT "PK_9ba05aafb677f8c8b43fd6cf307" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "IDENTITY_PROVIDERS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "name" varchar2(50) NOT NULL,
                        "provider_type" varchar2(50) NOT NULL,
                        "api_key" varchar2(255) NOT NULL,
                        "api_secret" varchar2(255) NOT NULL,
                        "config" clob,
                        "active" number DEFAULT 1 NOT NULL,
                        CONSTRAINT "UQ_4697e5520fd6176df70b9d64ebc" UNIQUE ("name"),
                        CONSTRAINT "PK_c83c8429c69a82e8005ed5b49dd" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "USER_OAUTH_ACCOUNTS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "user_id" number NOT NULL,
                        "provider_id" number NOT NULL,
                        "provider_user_id" varchar2(255) NOT NULL,
                        "access_token" clob,
                        "refresh_token" clob,
                        "token_expires_at" timestamp,
                        "profile_data" clob,
                        CONSTRAINT "PK_8014e33616a7bb1536db9c01596" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "OAUTH_PROVIDERS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "name" varchar2(50) NOT NULL,
                        "client_id" varchar2(255) NOT NULL,
                        "client_secret" varchar2(255) NOT NULL,
                        "auth_url" varchar2(500) NOT NULL,
                        "token_url" varchar2(500) NOT NULL,
                        "userinfo_url" varchar2(500) NOT NULL,
                        "redirect_url" varchar2(500) NOT NULL,
                        "scope" varchar2(500),
                        "active" number DEFAULT 1 NOT NULL,
                        CONSTRAINT "UQ_6f8e5a9f733fcd5cce064258c62" UNIQUE ("name"),
                        CONSTRAINT "PK_a26686443d5cd3510cd836060cb" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "SESSION_LOGS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "user_idx" number NOT NULL,
                        "token" varchar2(512) NOT NULL,
                        "ip_address" varchar2(45),
                        "user_agent" varchar2(500),
                        "expires_at" timestamp NOT NULL,
                        "ended_at" timestamp,
                        "end_reason" varchar2(50),
                        CONSTRAINT "UQ_981b42b26c45724d60f49c0033b" UNIQUE ("token"),
                        CONSTRAINT "PK_8a94f7cc544b8deb935c027b777" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "TERMS_AGREEMENTS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "user_idx" number NOT NULL,
                        "terms_idx" number NOT NULL,
                        "agreed" number DEFAULT 1 NOT NULL,
                        "agreed_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "ip_address" varchar2(50),
                        CONSTRAINT "PK_fb2a995d75ce4e2db7b4e5c7990" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "TERMS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "title" varchar2(200) NOT NULL,
                        "content" clob NOT NULL,
                        "type" varchar2(50) NOT NULL,
                        "version" varchar2(20) NOT NULL,
                        "required" number DEFAULT 1 NOT NULL,
                        "active" number DEFAULT 1 NOT NULL,
                        CONSTRAINT "PK_c4540f5ec195dbd1883a3fa5c1d" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "MAIL_AUDITS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "mail_id" varchar2(255),
                        "template" varchar2(255) NOT NULL,
                        "recipients" clob NOT NULL,
                        "status" varchar2(255) DEFAULT ''PENDING'' NOT NULL,
                        "sent_at" timestamp,
                        "error" varchar2(255),
                        "context" clob NOT NULL,
                        "locale" varchar2(255) DEFAULT ''ko'' NOT NULL,
                        CONSTRAINT "PK_a12fe79466a547bdd7844b3bb89" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "MENTOR_TAGS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "name" varchar2(50) NOT NULL,
                        "category" varchar2(20) NOT NULL,
                        "display_order" number DEFAULT 0 NOT NULL,
                        "is_active" number DEFAULT 1 NOT NULL,
                        CONSTRAINT "PK_31de952ad11d938be37c7cc68d8" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "MENTOR_PROFILE_TAGS" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "mentor_profile_id" number,
                        "mentor_tag_id" number,
                        CONSTRAINT "PK_15aa9cec6667c7d2b6989a110d1" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "MENTOR_PROFILES" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "cotept_user_id" varchar2(36) NOT NULL,
                        "introduction_title" varchar2(100),
                        "introduction_content" clob,
                        "baekjoon_tier_display" number DEFAULT 1 NOT NULL,
                        "mentoring_count" number DEFAULT 0 NOT NULL,
                        "total_review_count" number DEFAULT 0 NOT NULL,
                        "average_rating" number(3, 2) DEFAULT 0 NOT NULL,
                        "is_verified" number DEFAULT 0 NOT NULL,
                        "is_active" number DEFAULT 1 NOT NULL,
                        "profile_completion" number DEFAULT 0 NOT NULL,
                        "user_id" number,
                        CONSTRAINT "REL_033ba3a134a8e333a20ade62cd" UNIQUE ("user_id"),
                        CONSTRAINT "PK_08b267eaade1dcc17541c85b84c" PRIMARY KEY ("idx")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    CREATE TABLE "ONBOARDING_STATES" (
                        "idx" number GENERATED BY DEFAULT AS IDENTITY,
                        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        "userId" varchar2(36) NOT NULL,
                        "currentStep" number DEFAULT 1 NOT NULL,
                        "profileCreated" number DEFAULT 0 NOT NULL,
                        "baekjoonVerified" number DEFAULT 0 NOT NULL,
                        "skillAnalysisCompleted" number DEFAULT 0 NOT NULL,
                        "mentorProfileCreated" number DEFAULT 0 NOT NULL,
                        "completedAt" timestamp,
                        CONSTRAINT "PK_355778a880c8e13b3f2ceca7c0f" PRIMARY KEY ("idx", "userId")
                    )
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "USER_PROFILES"
                    ADD CONSTRAINT "FK_48ee21ddee7e59b310669f6b710" FOREIGN KEY ("user_id") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "BAEKJOON_PROFILE"
                    ADD CONSTRAINT "FK_f800260427bc88347516226bbd6" FOREIGN KEY ("user_id") REFERENCES "USERS" ("idx")
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "AUTH_VERIFICATIONS"
                    ADD CONSTRAINT "FK_b4a0f705a03077f142eea7af29f" FOREIGN KEY ("user_idx") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "PHONE_VERIFICATIONS"
                    ADD CONSTRAINT "FK_a1aecb12562cef2c5b1c0a8864c" FOREIGN KEY ("user_id") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "PHONE_VERIFICATIONS"
                    ADD CONSTRAINT "FK_205b5b3c3f9a18e435e26ef0e1d" FOREIGN KEY ("provider_id") REFERENCES "IDENTITY_PROVIDERS" ("idx")
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "USER_OAUTH_ACCOUNTS"
                    ADD CONSTRAINT "FK_fa45cf194b7541e60866bb2753f" FOREIGN KEY ("user_id") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "USER_OAUTH_ACCOUNTS"
                    ADD CONSTRAINT "FK_4252e861bb53302070991909a97" FOREIGN KEY ("provider_id") REFERENCES "OAUTH_PROVIDERS" ("idx")
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "SESSION_LOGS"
                    ADD CONSTRAINT "FK_72aa78f6c4af3db6b035019b0b7" FOREIGN KEY ("user_idx") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "TERMS_AGREEMENTS"
                    ADD CONSTRAINT "FK_c8c1472422d0a4b13ee1bba682b" FOREIGN KEY ("user_idx") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "TERMS_AGREEMENTS"
                    ADD CONSTRAINT "FK_a8aa9a3b282225cbe82b76d9cb5" FOREIGN KEY ("terms_idx") REFERENCES "TERMS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "MENTOR_PROFILE_TAGS"
                    ADD CONSTRAINT "FK_e1bd78b07af3d6ba568d8a0a8a8" FOREIGN KEY ("mentor_profile_id") REFERENCES "MENTOR_PROFILES" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "MENTOR_PROFILE_TAGS"
                    ADD CONSTRAINT "FK_d1e845cca2a154d35d7ea0268dd" FOREIGN KEY ("mentor_tag_id") REFERENCES "MENTOR_TAGS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
        await queryRunner.query(`
            BEGIN
                EXECUTE IMMEDIATE '
                    ALTER TABLE "MENTOR_PROFILES"
                    ADD CONSTRAINT "FK_033ba3a134a8e333a20ade62cde" FOREIGN KEY ("user_id") REFERENCES "USERS" ("idx") ON DELETE CASCADE
                ';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -2275 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;
        `);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`
            ALTER TABLE "MENTOR_PROFILES" DROP CONSTRAINT "FK_033ba3a134a8e333a20ade62cde"
        `);
        await queryRunner.query(`
            ALTER TABLE "MENTOR_PROFILE_TAGS" DROP CONSTRAINT "FK_d1e845cca2a154d35d7ea0268dd"
        `);
        await queryRunner.query(`
            ALTER TABLE "MENTOR_PROFILE_TAGS" DROP CONSTRAINT "FK_e1bd78b07af3d6ba568d8a0a8a8"
        `);
        await queryRunner.query(`
            ALTER TABLE "TERMS_AGREEMENTS" DROP CONSTRAINT "FK_a8aa9a3b282225cbe82b76d9cb5"
        `);
        await queryRunner.query(`
            ALTER TABLE "TERMS_AGREEMENTS" DROP CONSTRAINT "FK_c8c1472422d0a4b13ee1bba682b"
        `);
        await queryRunner.query(`
            ALTER TABLE "SESSION_LOGS" DROP CONSTRAINT "FK_72aa78f6c4af3db6b035019b0b7"
        `);
        await queryRunner.query(`
            ALTER TABLE "USER_OAUTH_ACCOUNTS" DROP CONSTRAINT "FK_4252e861bb53302070991909a97"
        `);
        await queryRunner.query(`
            ALTER TABLE "USER_OAUTH_ACCOUNTS" DROP CONSTRAINT "FK_fa45cf194b7541e60866bb2753f"
        `);
        await queryRunner.query(`
            ALTER TABLE "PHONE_VERIFICATIONS" DROP CONSTRAINT "FK_205b5b3c3f9a18e435e26ef0e1d"
        `);
        await queryRunner.query(`
            ALTER TABLE "PHONE_VERIFICATIONS" DROP CONSTRAINT "FK_a1aecb12562cef2c5b1c0a8864c"
        `);
        await queryRunner.query(`
            ALTER TABLE "AUTH_VERIFICATIONS" DROP CONSTRAINT "FK_b4a0f705a03077f142eea7af29f"
        `);
        await queryRunner.query(`
            ALTER TABLE "BAEKJOON_PROFILE" DROP CONSTRAINT "FK_f800260427bc88347516226bbd6"
        `);
        await queryRunner.query(`
            ALTER TABLE "USER_PROFILES" DROP CONSTRAINT "FK_48ee21ddee7e59b310669f6b710"
        `);
        await queryRunner.query(`
            DROP TABLE "ONBOARDING_STATES"
        `);
        await queryRunner.query(`
            DROP TABLE "MENTOR_PROFILES"
        `);
        await queryRunner.query(`
            DROP TABLE "MENTOR_PROFILE_TAGS"
        `);
        await queryRunner.query(`
            DROP TABLE "MENTOR_TAGS"
        `);
        await queryRunner.query(`
            DROP TABLE "MAIL_AUDITS"
        `);
        await queryRunner.query(`
            DROP TABLE "TERMS"
        `);
        await queryRunner.query(`
            DROP TABLE "TERMS_AGREEMENTS"
        `);
        await queryRunner.query(`
            DROP TABLE "SESSION_LOGS"
        `);
        await queryRunner.query(`
            DROP TABLE "OAUTH_PROVIDERS"
        `);
        await queryRunner.query(`
            DROP TABLE "USER_OAUTH_ACCOUNTS"
        `);
        await queryRunner.query(`
            DROP TABLE "IDENTITY_PROVIDERS"
        `);
        await queryRunner.query(`
            DROP TABLE "PHONE_VERIFICATIONS"
        `);
        await queryRunner.query(`
            DROP TABLE "AUTH_VERIFICATIONS"
        `);
        await queryRunner.query(`
            DROP TABLE "USERS"
        `);
        await queryRunner.query(`
            DROP TABLE "BAEKJOON_PROFILE"
        `);
        await queryRunner.query(`
            DROP TABLE "USER_PROFILES"
        `);
    }

}
